#!/usr/bin/env ruby

def compile_dot(lines)
  src = `mktemp`.chomp
  dst = `mktemp`.chomp
  File.write(src, lines.join("\n"))
  `dot -Tsvg < #{src} > #{dst}`
  # STDERR.puts "#{lines}"
  File.read(dst)
end

DOT_BEGIN_MARK = '```dot'
AT_INCLUDE_MARK = /^@\[([^\]]*)\]\(([^\)]*)\)$/
EXEC_MARK = /^< (.*)$/
END_MARK = '```'

lines = readlines.map(&:chomp)
buffer = []

status = :plain
lines.each do |line|
  if status == :plain
    if line == DOT_BEGIN_MARK
      status = :mkd
    elsif line =~ AT_INCLUDE_MARK
      res = AT_INCLUDE_MARK.match(line)
      puts "\n```#{res[1]}"
      puts `cat #{res[2]}`
      puts "```\n\n"
    elsif line =~ EXEC_MARK
      res = EXEC_MARK.match(line)
      command = res[1]
      puts `#{command}`
    else
      puts line
    end
  elsif status == :mkd
    if line == END_MARK
      puts compile_dot(buffer)
      buffer = []
      status = :plain
    else
      buffer << line
    end
  end
end
